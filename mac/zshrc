# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Uncomment below to enable profiling
# zmodload zsh/zprof

# Minimal settings
export ZPLUG_HOME=/usr/local/opt/zplug
source $ZPLUG_HOME/init.zsh

## ---- Package settings
# Packages
zplug "b4b4r07/emoji-cli"
zplug "romkatv/powerlevel10k", as:theme, depth:1
zplug "zsh-users/zsh-autosuggestions"
zplug "zdharma/fast-syntax-highlighting"

# Install plugins if there are plugins that have not been installed
if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi

fpath+=~/.zfunc

# Then, source plugins and add commands to $PATH
zplug load

## ---- Options
# Sane default
unsetopt correct_all
setopt no_beep
setopt auto_cd
export HISTFILE=~/.zsh_history
export HISTSIZE=1000000
export SAVEHIST=1000000
setopt append_history
setopt extended_history
setopt hist_expire_dups_first
setopt hist_ignore_dups # ignore duplication command history list
setopt hist_ignore_space
setopt hist_ignore_all_dups
setopt hist_find_no_dups
setopt hist_save_no_dups
setopt hist_verify
setopt share_history
setopt inc_append_history
setopt no_auto_remove_slash
setopt interactivecomments
unsetopt menu_complete   # do not autoselect the first completion entry
unsetopt flowcontrol
setopt auto_menu         # show completion menu on succesive tab press
setopt complete_in_word
setopt always_to_end
export WORDCHARS='*?_-.[]~=&;!#$%^(){}<>'
# disable ctrl-s
if [[ -t 0 && $- = *i* ]]
then
    stty -ixon
fi

# Completions
autoload -Uz compinit
for dump in ~/.zcompdump(N.mh+24); do
  compinit
done
compinit -C
zstyle ':completion:*' matcher-list '' 'm:{[:lower:]}={[:upper:]}' '+m:{[:upper:]}={[:lower:]}'

# Theming
[ -f "${HOME}/.nord.dircolors" ] && eval $(gdircolors -b ${HOME}/.nord.dircolors)
[ -n "$LS_COLORS" ] && zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}

# Aliases
alias ls='gls -h --color=auto'
alias ll='ls -lh'
alias la='ls -alh'
alias chrome="/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome"
export EDITOR="/usr/local/bin/vim"
export VISUAL="/usr/local/bin/vim"
# Keys, Completions
bindkey -e
bindkey "\e[Z" reverse-menu-complete
bindkey -a 'q' push-line
bindkey -a 'H' run-help
bindkey "^F" forward-char
bindkey "^B" backward-char
autoload history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
bindkey "^P" history-beginning-search-backward-end
bindkey "^N" history-beginning-search-forward-end

# Enable Ctrl-x-e to edit command line
autoload -U edit-command-line
zle -N edit-command-line
bindkey '^xe' edit-command-line
bindkey '^x^e' edit-command-line

# Functions, and utils on start-up
less_with_unbuffer () {
    unbuffer "$@" |& less -SR
}
alias ul=less_with_unbuffer

use-google-cloud-sdk () {
    export CLOUDSDK_PYTHON=python3
    _google_cloud_sdk_dir="${HOME}/google-cloud-sdk/"
    [ -f "${_google_cloud_sdk_dir}path.zsh.inc" ] && source "${_google_cloud_sdk_dir}path.zsh.inc"
    [ -f "${_google_cloud_sdk_dir}completion.zsh.inc" ] && source "${_google_cloud_sdk_dir}completion.zsh.inc"
}

activate () {
    [[ -f "./.venv/bin/activate" ]] && { source ./.venv/bin/activate ; return 0 } \
        || [[ -f "./venv/bin/activate" ]] && { source ./venv/bin/activate ; return 0 } \
        || SRC=$(echo $(dirname $(poetry run which python 2>/dev/null ) 2>/dev/null )/activate ); \
           [[ -f ${SRC} ]] && { poetry shell ; return 0 } \
        || SRC=$(echo $(dirname $(pipenv --py 2>/dev/null ) 2>/dev/null )/activate ); \
           [[ -f ${SRC} ]] && { pipenv shell ; return 0 } \
        || { echo "No virtualenv found in $(pwd)" ; return 1 }
}

# Fix for https://github.com/sdispater/poetry/issues/571 (poetry <= 0.12.*)
poetry_shell () {
    SRC=$(echo $(dirname $(poetry run which python 2>/dev/null ) 2>/dev/null )/activate )
    [[ -f ${SRC} ]] && source ${SRC} || echo "Failed to source ${SRC}"
}


count-loc () {
    find . -name "*.${1}" | xargs -L1 wc -l | tr -s " " | cut -d " " -f 2 | paste -sd+ - | bc
}

eval "$(pyenv init -)"
export PATH="${HOME}/.poetry/bin:${PATH}"
source "${HOME}/.local/share/dephell/_dephell_zsh_autocomplete"

export VOLTA_HOME="$HOME/.volta"
export PATH="$VOLTA_HOME/bin:$PATH"

[ -f "${HOME}/.fzf.zsh" ] && . ${HOME}/.fzf.zsh
export FZF_DEFAULT_OPTS="--color 16"

export DIRENV_WARN_TIMEOUT=100s
eval "$(direnv hook zsh)"

export PATH="$HOME/.jenv/bin:$PATH"
eval "$(jenv init -)"

#export PATH="/usr/local/opt/terraform@0.13/bin:$PATH"

use-google-cloud-sdk

# Uncomment below to enable profiling
# zprof

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

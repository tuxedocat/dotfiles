# ----------------------------------------------------------------------
# General options
# ----------------------------------------------------------------------
# instructs tmux to expect UTF-8 sequences
# setw -g utf8 on
set -g default-terminal "screen-256color"
set-option -g default-shell /usr/local/bin/zsh
set-option -g default-command "/usr/local/bin/reattach-to-user-namespace zsh"

# xterm-style function key sequences
setw -g xterm-keys on

# Allows for faster key repetition
set -s escape-time 0

# scrollback buffer n lines
set -g history-limit 5000

# start window indexing at one (default = 0)
set -g base-index 1

# buffer settings
bind-key Escape copy-mode
bind-key y paste-buffer -s \015

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# renaming windows
setw -g automatic-rename on
set-option -g set-titles on
# set-option -g set-titles-string '[#S:#I #H] #W'

# Mouse support
set-option -g mouse off

# ----------------------------------------------------------------------
# Key bindings
# ----------------------------------------------------------------------
set-window-option -g mode-keys vi

# remap prefix to Control + s
set -g prefix C-s
unbind C-b
unbind -n Tab

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind C-s send-prefix
bind-key a send-prefix

# quick pane cycling
# unbind ^A
# bind ^A select-pane -t :.+
bind-key Space last-pane
bind-key C-Space next-layout
bind-key Tab last-pane

# function keys
bind-key -n F2 new-window
bind-key -n F3 previous-window
bind-key -n F4 next-window
bind-key -n F5 refresh-client
bind-key -n F6 detach

bind-key -n F8 command-prompt "rename-window %%"
bind-key -n F9 command-prompt "rename-window %%"
bind-key -n F10 new-window
bind-key -n F11 kill-window
bind-key -n F12 select-window -t :+

# force a reload of the config file
unbind R
bind R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded"

# ----------------------------------------------------------------------
# Window
# ----------------------------------------------------------------------
#unbind %
bind | split-window -h
#unbind '"'
bind - split-window -v


# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# ----------------------------------------------------------------------
# Looks, and status
# ----------------------------------------------------------------------

# set -g status-utf8 on
# set -g status-justify centre

# Status bar has a dim gray background
set-option -g status-bg default
set-option -g status-fg colour110

# Left shows the session name, in blue
set-option -g status-left-bg default
set-option -g status-left-fg colour74

# Example of using a shell command in the status line
set -g status-right "#[fg=white]#(uptime | cut -d ',' -f 2-)"

# Highlight active window
set-window-option -g window-status-current-bg colour8
